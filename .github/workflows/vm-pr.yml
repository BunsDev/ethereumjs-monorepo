name: VM
on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

env:
  cwd: ${{github.workspace}}/packages/vm

defaults:
  run:
    working-directory: packages/vm

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  vm-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: npm run lint
      - run: npm run coverage
      #     - run: npm run test:API:browser -- disabled until we fix browser tests for vitest

      - uses: codecov/codecov-action@v3
        with:
          files: ${{ env.cwd }}/coverage/lcov.info
          flags: vm

  vm-state:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fork: ['London', 'Berlin', 'Paris', 'MuirGlacier', 'Istanbul', 'Shanghai']
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: FORK=${{ matrix.fork )} npx vitest run ./test/tester/state/index.spec.ts

  vm-state-extended:
    if: contains(join(github.event.pull_request.labels.*.name, ' '), 'Test all hardforks')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fork:
          [
            'Shanghai',
            'Paris',
            'London',
            'Berlin',
            'MuirGlacier',
            'Istanbul',
            'Petersburg',
            'Constantinople',
            'Byzantium',
            'SpuriousDragon',
            'TangerineWhistle',
            'Homestead',
            'Chainstart',
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: FORK=${{ matrix.fork )} npx vitest run ./test/tester/state/index.spec.ts

  vm-blockchain:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Args to pass to the tester. Note that some have split the slow tests and only
        # run on forks where applicable (see PR #489 for numbers on these)

        # Tests were split with --dir and --excludeDir to balance execution times below the 9min mark.
        args:
          [
            'FORK=Berlin DIR=GeneralStateTests/stTimeConsuming',
            'FORK=Berlin EXCLUDEDIR=stTimeConsuming',
            'FORK=London DIR=GeneralStateTests/stTimeConsuming',
            'FORK=London EXCLUDEDIR=stTimeConsuming',
            'FORK=Istanbul DIR=GeneralStateTests/stTimeConsuming COUNT=15561',
            'FORK=Istanbul EXCLUDEDIR=stTimeConsuming COUNT=19817',
            'FORK=Paris DIR=GeneralStateTests/stTimeConsuming',
            'FORK=Paris EXCLUDEDIR=stTimeConsuming',
            'FORK=ArrowGlacierToMergeAtDiffC0000',
            'FORK=Shanghai DIR=GeneralStateTests/stTimeConsuming',
            'FORK=Shanghai EXCLUDEDIR=stTimeConsuming',
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: ${{ matrix.args }} npx vitest run test/tester/blockchain/index.spec.ts

  vm-blockchain-extended:
    if: contains(join(github.event.pull_request.labels.*.name, ' '), 'Test all hardforks')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Args to pass to the tester.
        args:
          [
            'FORK=Chainstart',
            'FORK=Homestead',
            'FORK=TangerineWhistle',
            'FORK=SpuriousDragon',
            'FORK=Byzantium',
            'FORK=Constantinople',
            'FORK=Petersburg',
            'FORK=Istanbul',
            'FORK=MuirGlacier',
            'FORK=Berlin',
            'FORK=London',
            'FORK=Paris',
            'FORK=Shanghai',
            'FORK=ByzantiumToConstantinopleFixAt5',
            'FORK=EIP158ToByzantiumAt5',
            'FORK=FrontierToHomesteadAt5',
            'FORK=HomesteadToDaoAt5',
            'FORK=HomesteadToEIP150At5',
            'FORK=BerlinToLondonAt5',
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: ${{ matrix.args }} npm run test:blockchain

  vm-benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
        working-directory: ${{github.workspace}}

      - run: npm run build:benchmarks
        working-directory: ${{ env.cwd }}

      - run: npm run benchmarks -- mainnetBlocks:10 | tee output.txt
        working-directory: ${{ env.cwd }}

      # Run git stash in case github-action-benchmark has trouble switching to gh-pages branch due to differing package-locks
      - run: git stash

      - name: Compare benchmarks
        uses: rhysd/github-action-benchmark@v1
        with:
          tool: 'benchmarkjs'
          # Where the output from the benchmark tool is stored
          output-file-path: ${{ env.cwd }}/output.txt
          # Location of data in gh-pages branch
          benchmark-data-dir-path: dev/bench/vm
          # Enable alert commit comment (default alert threshold: 200%)
          comment-on-alert: true
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy to GitHub pages branch automatically (if on master)
          auto-push: 'false'

      # Re-apply git stash to prepare for saving back to cache.
      # Avoids exit code 1 by checking if there are changes to be stashed first
      - run: STASH_LIST=`git stash list` && [ ! -z $STASH_LIST ] && git stash apply || echo "No files to stash-apply. Skippingâ€¦"
